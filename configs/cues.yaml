# cues.yaml - Public Cue Definitions (Observable Signals)
# This defines how internal meter states map to observable "tells" (public cues).
#
# PURPOSE: Enable Module C (Social Model) to learn opponent modeling
# STATUS: TEMPLATE (Will be implemented after Level 4 multi-agent)
#
# Architecture:
# - Agents have HIDDEN meter states (bars) that opponents can't see directly
# - When certain conditions are met, agents emit PUBLIC CUES (observable tells)
# - Module C learns to infer hidden states from these cues (theory of mind)
#
# Teaching Value:
# - Demonstrates information asymmetry in multi-agent systems
# - Shows how AI can do "theory of mind" reasoning
# - Enables strategic deception and cooperation behaviors

version: "1.0"
description: "Public cue mappings for multi-agent opponent modeling"
status: "TEMPLATE - Awaiting Level 4 multi-agent implementation"

# ============================================================================
# SIMPLE CUES (Single Condition)
# ============================================================================

simple_cues:
  # PIVOTAL (Death Risk Signals)
  
  - cue_id: "looks_exhausted"
    name: "Looks Exhausted"
    category: "energy"
    visibility: "public"  # All agents can observe
    
    condition:
      meter: "energy"
      operator: "<"
      threshold: 0.20
    
    description: "Agent appears visibly tired, moving slowly"
    teaching_note: "Signals death risk - energy is pivotal meter"
    strategic_value: "Predator agents might target exhausted opponents"

  - cue_id: "looks_sickly"
    name: "Looks Sickly"
    category: "health"
    visibility: "public"
    
    condition:
      meter: "health"
      operator: "<"
      threshold: 0.30
    
    description: "Agent appears unwell, pale, weakened"
    teaching_note: "Signals death risk - health is pivotal meter"
    strategic_value: "Cooperative agents might offer help; competitive agents exploit"

  # SECONDARY (Quality of Life Signals)
  
  - cue_id: "looks_hungry"
    name: "Looks Hungry"
    category: "satiation"
    visibility: "public"
    
    condition:
      meter: "satiation"
      operator: "<"
      threshold: 0.20
    
    description: "Agent frequently looks at food sources"
    teaching_note: "Hunger is fundamental - affects both pivotal meters"
    strategic_value: "Predicts agent will seek food soon"

  - cue_id: "looks_sad"
    name: "Looks Sad"
    category: "mood"
    visibility: "public"
    
    condition:
      meter: "mood"
      operator: "<"
      threshold: 0.20
    
    description: "Agent has slumped posture, moves listlessly"
    teaching_note: "Low mood depletes energy (cascade effect)"
    strategic_value: "Might seek social interactions or recreation"

  - cue_id: "looks_unfit"
    name: "Looks Unfit"
    category: "fitness"
    visibility: "public"
    
    condition:
      meter: "fitness"
      operator: "<"
      threshold: 0.30
    
    description: "Agent appears out of shape, tires easily"
    teaching_note: "Low fitness increases health depletion (modulation)"
    strategic_value: "Long-term vulnerability indicator"

  # TERTIARY (Social Signals)
  
  - cue_id: "looks_dirty"
    name: "Looks Dirty"
    category: "hygiene"
    visibility: "public"
    
    condition:
      meter: "hygiene"
      operator: "<"
      threshold: 0.20
    
    description: "Agent appears unkempt, disheveled"
    teaching_note: "Hygiene cascades to satiation, fitness, and mood"
    strategic_value: "Early warning of potential death spiral"

  - cue_id: "looks_lonely"
    name: "Looks Lonely"
    category: "social"
    visibility: "public"
    
    condition:
      meter: "social"
      operator: "<"
      threshold: 0.20
    
    description: "Agent seeks out others, lingers near social affordances"
    teaching_note: "Low social cascades to mood, which affects energy"
    strategic_value: "Likely to accept social interactions"

# ============================================================================
# COMPOUND CUES (Multiple Conditions)
# ============================================================================

compound_cues:
  # AND Logic - All conditions must be true
  
  - cue_id: "death_spiral"
    name: "In Death Spiral"
    category: "emergency"
    visibility: "public"
    logic: "all_of"
    
    conditions:
      - { meter: "health", operator: "<", threshold: 0.30 }
      - { meter: "energy", operator: "<", threshold: 0.30 }
      - { meter: "satiation", operator: "<", threshold: 0.20 }
    
    description: "Agent in critical condition - cascading meter failures"
    teaching_note: "Multiple low meters trigger cascade effects that accelerate decline"
    strategic_value: "Imminent death prediction - agent desperate"

  - cue_id: "shambling_zombie"
    name: "Shambling Zombie"
    category: "exhaustion"
    visibility: "public"
    logic: "all_of"
    
    conditions:
      - { meter: "energy", operator: "<", threshold: 0.20 }
      - { meter: "mood", operator: "<", threshold: 0.20 }
      - { meter: "hygiene", operator: "<", threshold: 0.30 }
    
    description: "Exhausted, depressed, and dirty - zombie-like state"
    teaching_note: "Triple cascade: hygiene→mood→energy"
    strategic_value: "Vulnerable and predictable (will seek bed)"

  - cue_id: "hangry"
    name: "Hangry (Hungry + Angry)"
    category: "mood"
    visibility: "public"
    logic: "all_of"
    
    conditions:
      - { meter: "satiation", operator: "<", threshold: 0.20 }
      - { meter: "mood", operator: "<", threshold: 0.30 }
    
    description: "Irritable due to hunger - short-tempered"
    teaching_note: "Hunger affects mood, creating feedback loop"
    strategic_value: "Unpredictable behavior, avoid interaction"

  # OR Logic - Any condition triggers cue
  
  - cue_id: "stressed"
    name: "Visibly Stressed"
    category: "distress"
    visibility: "public"
    logic: "any_of"
    
    conditions:
      - { meter: "mood", operator: "<", threshold: 0.20 }
      - { meter: "energy", operator: "<", threshold: 0.30 }
      - { meter: "health", operator: "<", threshold: 0.40 }
    
    description: "Agent showing signs of stress from any source"
    teaching_note: "Multiple pathways to same observable state"
    strategic_value: "Agent likely to make suboptimal decisions"

  - cue_id: "needs_help"
    name: "Needs Help"
    category: "vulnerability"
    visibility: "public"
    logic: "any_of"
    
    conditions:
      - { meter: "health", operator: "<", threshold: 0.20 }
      - { meter: "energy", operator: "<", threshold: 0.15 }
    
    description: "Agent in danger, may accept assistance"
    teaching_note: "Either pivotal meter critically low"
    strategic_value: "Cooperation opportunity or exploitation target"

# ============================================================================
# SPECIAL CUES (Derived from Multiple Meters)
# ============================================================================

derived_cues:
  # Ratios and comparisons between meters
  
  - cue_id: "wealthy_but_unhealthy"
    name: "Rich but Sick"
    category: "irony"
    visibility: "public"
    
    conditions:
      - { meter: "money", operator: ">", threshold: 0.80 }  # Rich
      - { meter: "health", operator: "<", threshold: 0.30 }  # Sick
    
    description: "Has money but hasn't invested in health"
    teaching_note: "Demonstrates poor prioritization - money doesn't save you"
    strategic_value: "Predictable - will spend at Hospital"

  - cue_id: "fit_and_social"
    name: "Fit and Social"
    category: "thriving"
    visibility: "public"
    
    conditions:
      - { meter: "fitness", operator: ">", threshold: 0.70 }
      - { meter: "social", operator: ">", threshold: 0.70 }
    
    description: "Agent is thriving - healthy and socially active"
    teaching_note: "Good meter management prevents cascades"
    strategic_value: "Formidable competitor, good cooperation partner"

  - cue_id: "workaholic"
    name: "Workaholic"
    category: "pattern"
    visibility: "public"
    
    conditions:
      - { meter: "money", operator: ">", threshold: 0.90 }  # Very rich
      - { meter: "social", operator: "<", threshold: 0.20 }  # Isolated
      - { meter: "mood", operator: "<", threshold: 0.30 }  # Unhappy
    
    description: "Works constantly at expense of wellbeing"
    teaching_note: "Sub-optimal strategy - chasing money over happiness"
    strategic_value: "Predictable routine, exploitable schedule"

# ============================================================================
# BEHAVIORAL CUES (Based on Action Patterns)
# ============================================================================

behavioral_cues:
  # These would be inferred from observed actions, not just meters
  # (Future extension for more sophisticated theory of mind)
  
  - cue_id: "hoarding_money"
    name: "Hoarding Money"
    category: "behavior"
    visibility: "public"
    
    pattern: "refuses_to_spend"
    conditions:
      - { meter: "money", operator: ">", threshold: 0.80 }
      - { observation: "avoided_costly_affordances", count: 5 }
    
    description: "Accumulating money but not spending on needs"
    teaching_note: "Irrational behavior - money is resource, not goal"
    strategic_value: "Vulnerable to emergencies, might not survive crisis"

  - cue_id: "exploring"
    name: "Exploring New Options"
    category: "behavior"
    visibility: "public"
    
    pattern: "high_action_variety"
    conditions:
      - { observation: "unique_affordances_used", count: ">", threshold: 10 }
    
    description: "Agent trying different affordances, learning environment"
    teaching_note: "Exploration phase - agent building world model"
    strategic_value: "Unpredictable, may discover optimal strategies"

# ============================================================================
# CUE RELIABILITY & DECEPTION
# ============================================================================

cue_reliability:
  # Not all cues are 100% reliable - introduces uncertainty
  
  noisy_cues:
    - cue: "looks_sad"
      reliability: 0.85  # 85% accurate
      false_positive_rate: 0.10
      note: "Agent might just be tired, not actually sad"
    
    - cue: "looks_dirty"
      reliability: 0.95  # Very reliable
      false_positive_rate: 0.02
      note: "Hard to fake cleanliness"
  
  deception_potential:
    # Future: Agents could learn to fake cues
    - cue: "looks_sickly"
      can_fake: true
      cost: { meter: "energy", amount: 0.05 }
      note: "Agent can pretend to be sick to elicit help"
    
    - cue: "looks_exhausted"
      can_fake: true
      cost: { meter: "mood", amount: 0.10 }
      note: "Feigning exhaustion requires acting (mood cost)"

# ============================================================================
# MODULE C TRAINING STRATEGY
# ============================================================================

training_strategy:
  purpose: "Module C learns to infer hidden opponent meters from observable cues"
  
  data_generation:
    method: "Synthetic episodes with ground truth meter states"
    episodes: 10000
    note: "Generate random meter states, compute cues from config, train model to invert"
  
  architecture:
    input: "Public cues (one-hot encoded)"
    output: "Estimated opponent meter values (0-1 normalized)"
    loss: "MSE between predicted and actual opponent meters"
    target_accuracy: "<10% error on meter estimation"
  
  evaluation:
    metric: "Meter inference accuracy on held-out test set"
    success_criteria: "Better than random baseline by 50%+"
    note: "Perfect inference impossible due to cue ambiguity"

# ============================================================================
# TEACHING VALUE & GAME DESIGN
# ============================================================================

teaching_value:
  information_asymmetry: "Demonstrates hidden information and inference in multi-agent systems"
  
  theory_of_mind: "Shows how AI can reason about what others know/believe"
  
  strategic_depth: "Cues enable cooperation (help sick agents) and competition (exploit weak agents)"
  
  emergent_behavior: "Agents might learn to deceive or coordinate without explicit instruction"
  
  social_intelligence: "Beyond just learning physics - learning psychology"

game_design_insights:
  visibility_choice: "Which cues are public vs private affects strategic depth"
  
  cue_granularity: "More specific cues (shambling_zombie) vs general (stressed) create different gameplay"
  
  deception_mechanics: "Allowing fake cues adds bluffing/poker-like dynamics"
  
  cooperation_signals: "needs_help cue enables altruistic or predatory responses"
  
  pattern_learning: "Behavioral cues (hoarding_money) reward long-term observation"

# ============================================================================
# IMPLEMENTATION ROADMAP
# ============================================================================

implementation_phases:
  phase_1_foundation:
    when: "Level 4 multi-agent (after ACTION #12)"
    tasks:
      - "Implement CueGenerator that reads this config"
      - "Add public_cues field to agent observations"
      - "Create Pydantic validation for cue configs"
      - "Write equivalence tests for cue generation"
    
  phase_2_module_c:
    when: "After Level 4 working"
    tasks:
      - "Design Module C architecture (belief LSTM)"
      - "Generate synthetic training data"
      - "Train Module C to infer meters from cues"
      - "Evaluate inference accuracy"
    
  phase_3_integration:
    when: "After Module C trained"
    tasks:
      - "Integrate Module C into agent observations"
      - "Enable agents to condition on opponent beliefs"
      - "Measure strategic improvement in multi-agent"
      - "Create teaching materials on theory of mind"
    
  phase_4_advanced:
    when: "After basic opponent modeling works"
    tasks:
      - "Implement deception mechanics (fake cues)"
      - "Add behavioral pattern recognition"
      - "Enable emergent communication (Level 6)"
      - "Create family unit cooperation dynamics"

# ============================================================================
# FUTURE EXTENSIONS
# ============================================================================

future_extensions:
  communication_channel:
    type: "Discrete symbols (Level 6)"
    purpose: "Agents can send explicit messages, not just emit cues"
    note: "Bridges from implicit (cues) to explicit (language) communication"
  
  reputation_system:
    type: "Memory of past interactions"
    purpose: "Track which agents help vs exploit"
    note: "Enables reciprocity and punishment strategies"
  
  emotional_contagion:
    type: "Mood affects other nearby agents"
    purpose: "Social dynamics - happiness spreads"
    note: "Demonstrates emergent collective behavior"
  
  cultural_norms:
    type: "Shared expectations about behavior"
    purpose: "Agents learn social rules (e.g., don't steal food)"
    note: "Foundation for emergent ethics/morality"

# ============================================================================
# STATUS & NEXT STEPS
# ============================================================================

current_status:
  implemented: false
  blocked_by: "Level 4 multi-agent not yet started"
  prerequisite_actions:
    - "ACTION #12: Config-defined affordances (complete moonshot prerequisites)"
    - "ACTION #9: Fix POMDP/LSTM (working memory)"
    - "Level 3: Multi-zone hierarchical RL"
    - "Level 4: Multi-agent competition (4-10 agents)"
  
  estimated_timeline: "6-9 months after Level 4 starts"

next_steps:
  when_ready:
    - "Review this spec with multi-agent design in mind"
    - "Update cue definitions based on emergent behaviors"
    - "Create CueGenerator class following CascadeEngine pattern"
    - "Build Module C training pipeline"
